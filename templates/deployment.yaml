apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nightscout
spec:
  revisionHistoryLimit: 1
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{.Release.Name }}-nightscout
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-nightscout
    spec:
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
      {{- with .Values.minifyCache }}
      volumes:
        - name: minify
        {{- if (eq .type "emptyDir")}}
          emptyDir:
            sizeLimit: {{ .maxSize | quote }}
        {{- else if (eq .type "ephemeral") }}
          ephemeral:
            volumeClaimTemplate:
              spec:
                storageClassName: {{ .storageClassName }}
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: {{ .maxSize | quote }}
                  limits:
                    storage: {{ .maxSize | quote }}
        {{- else }}
        {{- fail "Value for .Values.minifyCache.type must be emptyDir or ephemeral" }}
        {{- end }}
      {{- end }}
      containers:
        - name: nightscout
          {{- with .Values.image }}
          image: "{{ .registry }}/{{ .repository }}:{{ .tag }}"
          {{- end }}
          ports:
            - containerPort: 1337
              name: http
          env:
            - name: INSECURE_USE_HTTP
              value: "true"
            - name: TZ
              value: {{ .Values.timezone }}
            - name: AUTH_DEFAULT_ROLES
              value: denied
            - name: API_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiSecret.name }}
                  key: {{ .Values.apiSecret.key }}
            - name: BASE_URL
              value: "https://{{ .Values.ingress.host }}"
            - name: DISPLAY_UNITS
              value: {{ .Values.displayUnits }}
            {{- with .Values.mongo }}
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .credentialSecret.name }}
                  key: {{ .credentialSecret.usernameKey }}
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .credentialSecret.name }}
                  key: {{ .credentialSecret.passwordKey }}
            - name: MONGODB_URI
              value: "mongodb://$(MONGO_USER):$(MONGO_PASSWORD)@{{ .host }}:{{ .port }}/{{ .database }}?authMechanism=PLAIN"
            {{- end }}
            {{- range $key, $value := .Values.browserDefaults }}
            - name: {{ $key | snakecase | upper }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - mountPath: /opt/app/node_module/.cache/_ns_cache/public
              name: minify
